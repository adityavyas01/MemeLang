hi_bhai
  // Simple calculator in MemeLang
  
  // Define calculator functions
  rakho function add(a, b) {
    return a + b;
  }
  
  rakho function subtract(a, b) {
    return a - b;
  }
  
  rakho function multiply(a, b) {
    return a * b;
  }
  
  rakho function divide(a, b) {
    if (b == 0) {
      chaap "Error: Division by zero!";
      return nalla;
    }
    return a / b;
  }
  
  rakho function modulo(a, b) {
    if (b == 0) {
      chaap "Error: Modulo by zero!";
      return nalla;
    }
    return a % b;
  }
  
  // Function to perform a calculation based on operator
  rakho function calculate(a, op, b) {
    if (op == "+") {
      return add(a, b);
    } else if (op == "-") {
      return subtract(a, b);
    } else if (op == "*") {
      return multiply(a, b);
    } else if (op == "/") {
      return divide(a, b);
    } else if (op == "%") {
      return modulo(a, b);
    } else {
      chaap "Error: Unknown operator " + op;
      return nalla;
    }
  }
  
  // Test calculations
  rakho testCases = [
    { a: 10, op: "+", b: 5 },
    { a: 10, op: "-", b: 5 },
    { a: 10, op: "*", b: 5 },
    { a: 10, op: "/", b: 5 },
    { a: 10, op: "%", b: 3 },
    { a: 10, op: "/", b: 0 }, // Edge case: division by zero
    { a: 10, op: "^", b: 2 }  // Edge case: unknown operator
  ];
  
  // Process each test case
  rakho i = 0;
  jabtak i < testCases.length {
    rakho testCase = testCases[i];
    rakho result = calculate(testCase.a, testCase.op, testCase.b);
    
    if (result != nalla) {
      chaap testCase.a + " " + testCase.op + " " + testCase.b + " = " + result;
    }
    
    i = i + 1;
  }
bye_bhai 