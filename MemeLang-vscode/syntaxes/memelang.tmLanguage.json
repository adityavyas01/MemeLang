{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "MemeLang",
  "scopeName": "source.memelang",
  "fileTypes": ["ml"],
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.memelang",
          "match": "\\b(hi_bhai|bye_bhai|agar|warna|jabtak|wapas|bas_karo|agla_dekho)\\b"
        },
        {
          "name": "keyword.declaration.memelang",
          "match": "\\b(rakho|pakka|kaam)\\b"
        },
        {
          "name": "keyword.operator.logical.memelang",
          "match": "\\b(aur|ya|nahi)\\b"
        },
        {
          "name": "constant.language.memelang",
          "match": "\\b(sahi|galat|kuch_nahi)\\b"
        },
        {
          "name": "support.function.memelang",
          "match": "\\b(chaap)\\b"
        },
        {
          "name": "keyword.other.memelang",
          "match": "\\b(class|extends|private|public|protected|static|constructor|this|super|new|import|export|from|default)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.memelang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.memelang",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.memelang",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.memelang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.memelang",
          "match": "//.*$"
        },
        {
          "name": "comment.block.memelang",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.memelang",
      "match": "\\b[0-9]+(\\.([0-9])+)?\\b"
    },
    "operators": {
      "name": "keyword.operator.memelang",
      "match": "[+\\-*/=<>!&|%]+"
    },
    "identifiers": {
      "name": "variable.other.memelang",
      "match": "[a-zA-Z_][a-zA-Z0-9_]*"
    }
  }
} 